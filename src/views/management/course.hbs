{{#section "styles" append=true}}
<link rel="stylesheet" href="/course-form.css" />
{{/section}}

<main class="main-content">
    <div class="container">
        <div class="welcome-section">
            <h1 class="welcome-title" id="welcomeTitle">Course Management</h1>
            <p class="welcome-text" id="welcomeText">
                {{#if (eq @root.authUser.UserPermission "0")}}
                Manage all courses in the system.
                {{else if (eq @root.authUser.UserPermission "1")}}
                Manage your courses.
                {{/if}}
            </p>
        </div>

        <section id="coursesSection" class="section active">
            <h2 class="section-title">üìö Course Management</h2>
            <div class="tab-nav">
                <button class="tab-btn active" data-tab="list" onclick="switchCourseTab('list')">üìã Course List</button>
                {{#if (eq @root.authUser.UserPermission "1")}} {{!-- Ch·ªâ Gi·∫£ng vi√™n th·∫•y n√∫t Add --}}
                <button class="tab-btn" data-tab="add" onclick="switchCourseTab('add')">‚ûï Add Course</button>
                {{/if}}
                <button class="tab-btn" data-tab="stats" onclick="switchCourseTab('stats')">üìä Stats</button>
            </div>

            {{! ----- TAB TH√äM KH√ìA H·ªåC (Ch·ªâ hi·ªÉn th·ªã cho Gi·∫£ng vi√™n) ----- }}
            {{#if (eq @root.authUser.UserPermission "1")}}
            <div id="courseAddTab" class="tab-content">
                {{#if errorAdd}}
                <div class="alert alert-danger" role="alert"
                    style="background-color: #c0392b; color: white; border: none; margin: 0 auto 20px auto; max-width: 900px; text-align: center; font-weight: bold;">
                    {{errorAdd}}</div>
                {{/if}}
                <div class="form-container" style="max-width: 900px; margin: 0 auto;">
                    <form action="/management/course/add" method="POST">
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label" for="CourseName">Course name *</label>
                                <input type="text" class="form-input" id="CourseName" name="CourseName"
                                    value="{{formData.CourseName}}" required />
                            </div>
                            <div class="form-group">
                                <label class="form-label" for="Level">Level *</label>
                                <select class="form-select" id="Level" name="Level" required>
                                    <option value="" {{#unless formData.Level}}selected{{/unless}}>Select Level</option>
                                    <option value="Beginner" {{#if (eq formData.Level "Beginner" )}}selected{{/if}}>
                                        Beginner</option>
                                    <option value="Intermediate" {{#if (eq formData.Level "Intermediate"
                                        )}}selected{{/if}}>Intermediate</option>
                                    <option value="Advanced" {{#if (eq formData.Level "Advanced" )}}selected{{/if}}>
                                        Advanced</option>
                                    <option value="Expert" {{#if (eq formData.Level "Expert" )}}selected{{/if}}>Expert
                                    </option>
                                </select>
                            </div>
                        </div>
                        <div class="form-row full">
                            <div class="form-group">
                                <label class="form-label" for="SubCatID">Subcategory *</label>
                                <select class="form-select" id="SubCatID" name="SubCatID" required>
                                    <option value="" {{#unless formData.SubCatID}}selected{{/unless}}>Select Subcategory
                                    </option>
                                    {{#each categories}} {{!-- D√πng categories t·ª´ route --}}
                                    <optgroup label="{{CatName}}">
                                        {{#each subcategories}}
                                        <option value="{{SubCatID}}" {{#if (eq ../../formData.SubCatID
                                            SubCatID)}}selected{{/if}}>{{SubCatName}}</option>
                                        {{/each}}
                                    </optgroup>
                                    {{/each}}
                                </select>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label" for="OriginalPrice">Original Price ($) *</label>
                                <input type="number" class="form-input" id="OriginalPrice" name="OriginalPrice" min="0"
                                    value="{{#if formData.OriginalPrice}}{{formData.OriginalPrice}}{{else}}0{{/if}}"
                                    required />
                            </div>
                            <div class="form-group">
                                <label class="form-label" for="CurrentPrice">Current Price ($) *</label>
                                <input type="number" class="form-input" id="CurrentPrice" name="CurrentPrice" min="0"
                                    value="{{#if formData.CurrentPrice}}{{formData.CurrentPrice}}{{else}}0{{/if}}"
                                    required />
                            </div>
                        </div>
                        <div class="form-row full">
                            <div class="form-group">
                                <label class="form-label" for="ImageUrl">Image URL (Optional)</label>
                                <input type="url" class="form-input" id="ImageUrl" name="ImageUrl"
                                    value="{{formData.ImageUrl}}" placeholder="https://..." />
                            </div>
                        </div>
                        <div class="form-row full">
                            <div class="form-group">
                                <label class="form-label" for="TinyDes">Tiny Description *</label>
                                <textarea class="form-textarea wysiwyg-editor" id="TinyDes" name="TinyDes" rows="3"
                                    required placeholder="Brief description...">{{formData.TinyDes}}</textarea>
                            </div>
                        </div>
                        <div class="form-row full">
                            <div class="form-group">
                                <label class="form-label" for="FullDes">Full Description *</label>
                                <textarea class="form-textarea wysiwyg-editor" id="FullDes" name="FullDes" rows="6"
                                    required placeholder="Detailed description...">{{formData.FullDes}}</textarea>
                            </div>
                        </div>
                        <div style="text-align: center; margin-top: 30px">
                            <button type="submit" class="btn btn-primary">‚ûï Create Course</button>
                        </div>
                    </form>
                </div>
            </div>
            {{/if}}

            {{! ----- B·∫ÆT ƒê·∫¶U THAY TH·∫æ TAB TH·ªêNG K√ä ----- }}
            <div id="courseStatsTab" class="tab-content">
                {{#with statistics}} {{! S·ª≠ d·ª•ng d·ªØ li·ªáu statistics ƒë∆∞·ª£c truy·ªÅn t·ª´ route }}
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-icon">üìö</div>
                        {{! Hi·ªÉn th·ªã t·ªïng s·ªë kh√≥a h·ªçc }}
                        <div class="stat-number">{{totalCourses}}</div>
                        <div class="stat-label">Total Courses</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">üë•</div>
                        {{! Hi·ªÉn th·ªã t·ªïng s·ªë h·ªçc vi√™n }}
                        <div class="stat-number">{{totalStudents}}</div>
                        <div class="stat-label">Total Students</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">‚≠ê</div>
                        {{! Hi·ªÉn th·ªã rating trung b√¨nh }}
                        <div class="stat-number">{{avgRating}}</div>
                        <div class="stat-label">Average Rating</div>
                    </div>
                    {{! C√≥ th·ªÉ th√™m th·∫ª stat-card kh√°c n·∫øu c·∫ßn }}
                </div>

                {{! Hi·ªÉn th·ªã s·ªë l∆∞·ª£ng theo tr·∫°ng th√°i }}
                <div id="categoryStatsContainer">
                    <div class="category-stats">
                        <h4>üìä Course Status</h4>
                        {{#each statusCounts}}
                        <div class="category-item">
                            {{!-- @key l√† t√™n tr·∫°ng th√°i (v√≠ d·ª•: 'draft'), this l√† s·ªë l∆∞·ª£ng --}}
                            <span>{{@key}}:</span>
                            <span>{{this}}</span>
                        </div>
                        {{else}}
                        <p style="color: var(--light-silver); text-align: center;">No status data yet.</p>
                        {{/each}}
                    </div>
                    {{! TODO: C√≥ th·ªÉ th√™m th·ªëng k√™ theo danh m·ª•c ·ªü ƒë√¢y }}
                </div>
                {{else}}
                <div class="empty-state">
                    <h3>üìä No statistical data available</h3>
                    <p>Statistics will appear when courses are available.</p>
                </div>
                {{/with}}
            </div>
            {{! ----- K·∫æT TH√öC THAY TH·∫æ TAB TH·ªêNG K√ä ----- }}

            {{! ----- TAB DANH S√ÅCH KH√ìA H·ªåC ----- }}
            <div id="courseListTab" class="tab-content active">
                {{!-- Th√¥ng b√°o th√†nh c√¥ng khi redirect t·ª´ Add --}}
                {{#if query.addSuccess}}
                <div class="alert alert-success" role="alert"
                    style="background-color: #27ae60; color: white; border: none; margin: 0 auto 20px auto; max-width: 900px; text-align: center; font-weight: bold;">
                    Th√™m kh√≥a h·ªçc m·ªõi th√†nh c√¥ng!</div>
                {{/if}}
                <div class="search-filter-bar">
                    <input type="text" id="courseSearchInputClient" class="search-input" placeholder="üîç Filter list..."
                        onkeyup="filterCourseListClientSide()" />
                    <select class="form-select" id="categoryFilterClient" style="width: auto"
                        onchange="filterCourseListClientSide()">
                        <option value="">All Subcategories</option>
                        {{#each categories}}
                        <optgroup label="{{CatName}}">
                            {{#each subcategories}} <option value="{{SubCatID}}">{{SubCatName}}</option> {{/each}}
                        </optgroup>
                        {{/each}}
                    </select>
                    <select class="form-select" id="statusFilterClient" style="width: auto"
                        onchange="filterCourseListClientSide()">
                        <option value="">All Status</option>
                        <option value="Completed">Completed</option>
                        <option value="Not Completed">Not Completed</option>
                    </select>
                </div>

                <div id="coursesList">
                    <div class="card-grid">
                        {{#each courses}}
                        <div class="card course-card-item" data-subcatid="{{SubCatID}}" data-status="{{CourseStatus}}">
                            <div class="card-header">
                                <div class="card-avatar">üìö</div>
                                <div class="card-info">
                                    <h3 class="course-name">{{CourseName}}</h3>
                                    <p>{{SubCatName}} ‚Ä¢ {{CatName}} {{#if InstructorName}} ‚Ä¢ {{InstructorName}}{{/if}}
                                    </p> {{!-- Hi·ªÉn th·ªã t√™n --}}
                                </div>
                            </div>
                            <div class="card-content">
                                <p>{{{TinyDes}}}</p>
                            </div>
                            <div class="card-meta">
                                <div class="meta-badge">‚≠ê {{Rating}}</div>
                                <div class="meta-badge">üë• {{TotalStudent}}</div>
                                <span class="status-badge status-{{CourseStatus}}">{{CourseStatus}}</span>
                            </div>
                            <div class="price-display">
                                <span class="price-current">$ {{CurrentPrice}}</span>
                                <span class="price-original">$ {{OriginalPrice}}</span>
                            </div>
                            <div class="card-actions">
                                <a href="/management/course/edit?id={{CourseID}}" class="btn btn-secondary btn-sm">‚úèÔ∏è
                                    Edit</a>
                                <form action="/management/course/delete" method="POST" style="display: inline;"
                                    onsubmit="return confirm('Are you sure you want to delete this course? This action cannot be undone.');">
                                    <input type="hidden" name="CourseID" value="{{CourseID}}" />
                                    <button type="submit" class="btn btn-danger btn-sm">üóëÔ∏è Delete</button>
                                </form>
                                <a href="/management/course/{{CourseID}}/lessons" class="btn btn-primary btn-sm">üìñ
                                    Manage Lessons</a>
                                <a href="/management/course/{{CourseID}}/students" class="btn btn-info btn-sm"
                                    style="background-color: #17a2b8; border-color: #17a2b8; color: white;">üë• View
                                    Students</a>
                            </div>
                        </div>
                        {{else}}
                        <div class="empty-state">
                            <h3>üìö No courses found.</h3>
                            {{#if (eq @root.authUser.UserPermission "1")}}
                            <p>Go to the "Add Course" tab to create your first course.</p>
                            {{/if}}
                        </div>
                        {{/each}}
                    </div>
                </div>
            </div>
        </section>
    </div>
</main>

{{! ----- SCRIPT CHUY·ªÇN TAB V√Ä FILTER CLIENT-SIDE ----- }}
<script>
    function switchCourseTab(tabName) {
        document.querySelectorAll("#coursesSection .tab-btn").forEach(btn => btn.classList.remove("active"));
        document.querySelectorAll("#coursesSection .tab-content").forEach(content => content.classList.remove("active"));

        const activeButton = document.querySelector(`#coursesSection .tab-btn[data-tab='${tabName}']`);
        if (activeButton) activeButton.classList.add("active");

        const activeContent = document.getElementById("course" + tabName.charAt(0).toUpperCase() + tabName.slice(1) + "Tab");
        if (activeContent) activeContent.classList.add("active");
    }

    // Filter client-side cho danh s√°ch kh√≥a h·ªçc
    function filterCourseListClientSide() {
        const searchTerm = document.getElementById('courseSearchInputClient').value.toLowerCase();
        // S·ª≠a: L·∫•y ƒë√∫ng gi√° tr·ªã SubCatID t·ª´ select box
        const subCategoryFilter = document.getElementById('categoryFilterClient').value;
        const statusFilter = document.getElementById('statusFilterClient').value;
        const courseCards = document.querySelectorAll('.course-card-item');

        courseCards.forEach(card => {
            const courseName = card.querySelector('.course-name')?.textContent.toLowerCase() || '';
            // S·ª≠a: L·∫•y ƒë√∫ng data attribute data-subcatid
            const subCatId = card.getAttribute('data-subcatid');
            const status = card.getAttribute('data-status');

            const matchesSearch = !searchTerm || courseName.includes(searchTerm); // S·ª≠a: Cho ph√©p search tr·ªëng
            // S·ª≠a: So s√°nh subCatId v·ªõi subCategoryFilter
            const matchesSubCategory = !subCategoryFilter || subCatId === subCategoryFilter;
            const matchesStatus = !statusFilter || status === statusFilter;

            // Hi·ªÉn th·ªã ho·∫∑c ·∫©n card d·ª±a tr√™n k·∫øt qu·∫£ l·ªçc
            if (matchesSearch && matchesSubCategory && matchesStatus) {
                card.style.display = '';
            } else {
                card.style.display = 'none';
            }
        });
    }

    // M·∫∑c ƒë·ªãnh hi·ªÉn th·ªã tab 'list' v√† x·ª≠ l√Ω redirect
    document.addEventListener('DOMContentLoaded', () => {
        const urlParams = new URLSearchParams(window.location.search);

        // S·ª≠a: L·∫•y gi√° tr·ªã boolean tr·ª±c ti·∫øp t·ª´ Handlebars
        const _errorAddStr = "{{#if errorAdd}}true{{else}}false{{/if}}"; // Render th√†nh chu·ªói "true" ho·∫∑c "false"
        const errorAdd = (_errorAddStr === 'true'); // Chuy·ªÉn chu·ªói th√†nh boolean true/false
        const addSuccess = urlParams.has('addSuccess');
        const updateSuccess = urlParams.has('updateSuccess');
        const deleteSuccess = urlParams.has('deleteSuccess');

        // S·ª≠a: L·∫•y gi√° tr·ªã chu·ªói, ƒë·∫£m b·∫£o trong d·∫•u nh√°y k√©p
        const requestedTab = "{{activeTab}}"; // L·∫•y gi√° tr·ªã chu·ªói

        let activeDefaultTab = 'list'; // M·∫∑c ƒë·ªãnh l√† list

        // Ki·ªÉm tra requestedTab tr∆∞·ªõc
        if (requestedTab === 'add') {
            activeDefaultTab = 'add';
        } else if (errorAdd) { // N·∫øu c√≥ l·ªói add th√¨ m·ªõi chuy·ªÉn sang add
            activeDefaultTab = 'add';
        }
        // C√°c tr∆∞·ªùng h·ª£p success s·∫Ω m·∫∑c ƒë·ªãnh v·ªÅ 'list'

        switchCourseTab(activeDefaultTab); // Active tab m·∫∑c ƒë·ªãnh ho·∫∑c tab add n·∫øu c√≥ l·ªói

        // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng (chung cho Add, Update, Delete)
        let successMessage = '';
        if (addSuccess) successMessage = 'New course added successfully!';
        else if (updateSuccess) successMessage = 'Course update successful!';
        else if (deleteSuccess) successMessage = 'Course deleted successfully!';

        if (successMessage) {
            const listTab = document.getElementById('courseListTab');
            if (listTab) {
                const successMsg = document.createElement('div');
                successMsg.className = 'alert alert-success';
                successMsg.setAttribute('role', 'alert');
                successMsg.style = "background-color: #27ae60; color: white; border: none; margin: 0 auto 20px auto; max-width: 900px; text-align: center; font-weight: bold;";
                successMsg.textContent = successMessage;
                // Ch√®n v√†o ƒë·∫ßu tab list
                listTab.insertBefore(successMsg, listTab.querySelector('.search-filter-bar'));
                setTimeout(() => successMsg.remove(), 4000);
            }
        }

        // Kh·ªüi t·∫°o TinyMCE cho textarea trong tab "Add Course"
        if (document.getElementById('courseAddTab')) { // Ch·ªâ kh·ªüi t·∫°o n·∫øu tab t·ªìn t·∫°i
            tinymce.init({
                selector: '#courseAddTab textarea.wysiwyg-editor', // Ch·ªçn textarea c√≥ class wysiwyg-editor trong tab add
                plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount linkchecker',
                toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat',
                height: 300 // Chi·ªÅu cao c·ªßa editor
            });
        }
    });
</script>