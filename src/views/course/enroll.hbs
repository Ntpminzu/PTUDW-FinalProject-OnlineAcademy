{{#section "styles" append=true}}
<link rel="stylesheet" href="https://cdn.plyr.io/3.7.8/plyr.css">
<link rel="stylesheet" href="/enroll.css">
{{/section}}

<div class="course-page container mt-4">
  <!-- Course Header -->
  <div class="card course-header">
    <h5 class="card-header">
      <i class="bi bi-book-half"></i> Course Details
    </h5>
    <div class="card-body">
      <h5 class="card-title">{{course.CourseName}}</h5>
      <p class="card-text">Description: {{course.CourseName}}</p>
      <p class="card-text">Professor: {{course.InstructorName}}</p>
      <p class="card-text">Duration: {{course.WeekView}} weeks</p>
      <a href="#" class="btn btn-primary btn-sm" id="startCourseBtn">
        <i class="bi bi-play-circle"></i> Start Learning
      </a>
      <a href="/course/detail?id={{course.CourseID}}" class="btn-return">
        <i class="bi bi-arrow-left"></i> Return to Course List
      </a>
    </div>
  </div>

  <!-- Video List -->
  <div class="video-list mt-4">
    <h5>Course Modules</h5>
    <ul class="list-group" id="videoList">
      {{#each lessons}}
      <li class="list-group-item video-item" data-video="{{this.VideoUrl}}" data-lesson-id="{{this.LessonID}}"
        data-course-id="{{course.CourseID}}">
        <i class="bi bi-play-circle"></i>
        {{this.LessonName}}
        {{#if this.isCompleted}}
        <i class="bi bi-check-circle-fill" style="color: #28a745; margin-left: 10px;"></i>
        {{/if}}
      </li>
      {{/each}}
    </ul>
  </div>


  <!-- Video Player -->
  <div class="video-player mt-4">
    <h5>Now Playing: <span id="videoTitle"></span></h5>
    <div id="playerContainer">
      <div class="plyr__video-embed" id="videoPlayer">
        <iframe src="https://www.youtube.com/embed/mZI-pAdglyM" allowfullscreen allow="autoplay"></iframe>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.plyr.io/3.7.8/plyr.polyfilled.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const player = new Plyr("#videoPlayer", {
      controls: ['play-large', 'play', 'progress', 'current-time', 'mute', 'volume', 'settings', 'fullscreen'],
      youtube: { rel: 0, modestbranding: 1 }
    });

    const startCourseBtn = document.getElementById("startCourseBtn");
    const videoItems = document.querySelectorAll(".video-item");
    const videoTitle = document.getElementById("videoTitle");
    const courseKey = "ExampleCourse_progress";
    let learnedVideos = JSON.parse(localStorage.getItem(courseKey)) || [];
    let currentIndex = 0;

    function extractYouTubeID(url) {
      const match = url.match(/(?:youtube\.com\/embed\/|youtu\.be\/)([^&#]*)/);
      return match ? match[1] : null;
    }

    function playVideoAtIndex(index) {
      if (index < 0 || index >= videoItems.length) return;
      videoItems.forEach(v => v.classList.remove("active"));
      const item = videoItems[index];
      item.classList.add("active");
      const videoUrl = item.getAttribute("data-video");
      const title = item.textContent.trim();
      videoTitle.textContent = title;
      const id = extractYouTubeID(videoUrl);
      console.log(id);

      player.source = {
        type: "video",
        sources: [{ src: id, provider: "youtube" }]
      };
      player.play();
      currentIndex = index;
    }

    startCourseBtn.addEventListener("click", e => {
      e.preventDefault();
      playVideoAtIndex(0);
    });

    videoItems.forEach((item, index) => {
      item.addEventListener("click", () => playVideoAtIndex(index));
    });

    player.on("ended", () => {
      const currentItem = videoItems[currentIndex];
      const currentUrl = currentItem.getAttribute("data-video");
      const lessonId = currentItem.getAttribute("data-lesson-id");
      const courseId = currentItem.getAttribute("data-course-id");
      console.log('lessonId: ' + lessonId)
      console.log('courseId: ' + courseId)

      if (!learnedVideos.includes(currentUrl)) {
        learnedVideos.push(currentUrl);
        localStorage.setItem(courseKey, JSON.stringify(learnedVideos));
      }

      fetch('/account/finish-lesson', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          lessonId: lessonId,
          courseId: courseId
        })
      })
        .then(response => {
          if (!response.ok) {
            console.error('Failed to finish lesson');
            window.location.reload();
            return;
          }
          console.log('Lesson finished successfully');
          window.location.reload();
        })
        .catch(error => {
          console.error('Error:', error);
          window.location.reload();

        });

      if (currentIndex + 1 < videoItems.length) {
        playVideoAtIndex(currentIndex + 1);
      } else {
        console.log("ðŸŽ‰ All videos completed!");
      }
    });

  });

</script>